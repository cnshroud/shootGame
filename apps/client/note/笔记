

状态同步与帧同步的区别
状态同步：
客户端触发渲染后提交给服务器，由服务器来计算数据，并且所有的数据都是由服务器来计算的，客户端只展示效果
帧同步：
客户端把操作发给服务器，服务器打包（摇了摇杆，点了技能按钮等操作）转发为数据帧交给客户端计算，服务器只负责数据收集和转发，所有操作和渲染都是客户端来做的。
帧同步需要考虑如何让每个客户端的计算都保存一致，和从服务器转发到每个客户端的时间如何保持一致

for of 和for in的区别
区别一：for in 和 for of 都可以循环数组，for in 输出的是数组的index下标，而for of 输出的是数组的每一项的值。

const arr = [1,2,3,4]
// for ... in
for (const key in arr){
    console.log(key)                  // 输出 0,1,2,3
    }
// for ... of
for (const key of arr){
    console.log(key)                  // 输出 1,2,3,4

区别二：for in 可以遍历对象，for of 不能遍历对象，只能遍历带有iterator接口的，例如Set,Map,String,Array


const object = { name: 'lx', age: 23 }
    // for ... in
    for (const key in object) {
      console.log(key)                            // 输出 name,age
      console.log(object[key])                      // 输出 lx,23
    }
    // for ... of
    for (const key of object) {
      console.log(key) // 报错 Uncaught TypeError: object is not iterable

3.数组对象

const list = [{ name: 'lx' }, { age: 23 }]
    for (const val of list) {
      console.log(val)                    // 输出{ name: 'lx' }, { age: 23 }
      for (const key in val) {
        console.log(val[key])               // 输出 lx,23
      }
    }

    总结：for in适合遍历对象，for of适合遍历数组。for in遍历的是数组的索引，对象的属性，以及原型链上的属性。